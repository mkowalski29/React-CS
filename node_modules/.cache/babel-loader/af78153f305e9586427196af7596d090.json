{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mkowa\\\\Documents\\\\dev\\\\React-CS\\\\react-cs\\\\src\\\\components\\\\Todo.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport Modal from './Modal';\nimport Backdrop from './Backdrop';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Todo(props) {\n  _s();\n\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n\n  function deleteHandler() {\n    setModalIsOpen(true);\n  }\n\n  function closeModalHandler() {\n    setModalIsOpen(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: props.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: deleteHandler,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), modalIsOpen && /*#__PURE__*/_jsxDEV(Modal, {\n      onCancel: closeModalHandler,\n      onConfirm: closeModalHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }, this), modalIsOpen && /*#__PURE__*/_jsxDEV(Backdrop, {\n      onCancel: closeModalHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Todo, \"ejm4ucTQCe4top8V5pzwvdBGdhM=\");\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["C:/Users/mkowa/Documents/dev/React-CS/react-cs/src/components/Todo.js"],"names":["useState","Modal","Backdrop","Todo","props","modalIsOpen","setModalIsOpen","deleteHandler","closeModalHandler","text"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AACrB,QAAM,CAAEC,WAAF,EAAeC,cAAf,IAAkCN,QAAQ,CAAC,KAAD,CAAhD;;AAEI,WAASO,aAAT,GAAyB;AACrBD,IAAAA,cAAc,CAAC,IAAD,CAAd;AACP;;AAED,WAASE,iBAAT,GAA6B;AACzBF,IAAAA,cAAc,CAAC,KAAD,CAAd;AACH;;AAEG,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACI;AAAA,gBAAKF,KAAK,CAACK;AAAX;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,6BACI;AAAQ,QAAA,SAAS,EAAC,KAAlB;AAAwB,QAAA,OAAO,EAAEF,aAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ,EAOKF,WAAW,iBACR,QAAC,KAAD;AAAO,MAAA,QAAQ,EAAEG,iBAAjB;AAAoC,MAAA,SAAS,EAAEA;AAA/C;AAAA;AAAA;AAAA;AAAA,YARR,EAUKH,WAAW,iBAAI,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAEG;AAApB;AAAA;AAAA;AAAA;AAAA,YAVpB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH;;GAzBQL,I;;KAAAA,I;AA2BT,eAAeA,IAAf","sourcesContent":["import { useState } from 'react';\r\n\r\nimport Modal from './Modal';\r\nimport Backdrop from './Backdrop';\r\n\r\nfunction Todo(props) {\r\nconst [ modalIsOpen, setModalIsOpen ] = useState(false);\r\n\r\n    function deleteHandler() {\r\n        setModalIsOpen(true);\r\n}\r\n\r\nfunction closeModalHandler() {\r\n    setModalIsOpen(false);\r\n}\r\n\r\n    return (\r\n        <div className='card'>\r\n            <h2>{props.text}</h2>\r\n            <div className='actions'>\r\n                <button className='btn' onClick={deleteHandler}>\r\n                    Delete\r\n                </button>\r\n            </div>\r\n            {modalIsOpen && (\r\n                <Modal onCancel={closeModalHandler} onConfirm={closeModalHandler} />\r\n            )}\r\n            {modalIsOpen && <Backdrop onCancel={closeModalHandler} />}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Todo;"]},"metadata":{},"sourceType":"module"}